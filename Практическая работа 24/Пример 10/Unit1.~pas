unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls;

type
  TForm1 = class(TForm)
    Timer1: TTimer;
    procedure Active(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Close(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  Back, bitmap, Buf : TBitMap; // фон, картинка, буфер 

  // область фона, которая должна быть восстановлена из буфера 
  BackRet : TRect;  //область буфера, которая используется для восстановления фона
  BufRet: Trect;
  x,y: Integer;     // текущее положение картинки
  W,H: Integer;     // размеры картинки


implementation

{$R *.dfm}

procedure TForm1.Active(Sender: TObject);
begin
// создать три объекта — битовых образа 
Back := TBitmap.Create; // фон 
bitmap := TBitmap.Create; // картинка 
Buf := TBitmap.Create; // буфер
// загрузить и вывести фон 
Back.LoadFromFile('factory.bmp');
Form1.Image1.Canvas.Draw(0,0,Back);
// загрузить картинку, которая будет двигаться
bitmap.LoadFromFile('aplane.bmp');
bitmap.Transparent := True; // определим "прозрачный" цвет
bitmap.TransParentColor := bitmap.canvas.pixels[1,1];
// создать буфер для сохранения копии области фона,
// на которую накладывается картинка
W:= bitmap.Width;		H:= bitmap.Height;
Buf.Width:= W;		Buf.Height:=H;
Buf.Palette:=Back.Palette; 
// Чтобы обеспечить соответствие палитр 
Buf.Canvas.CopyMode:=cmSrcCopy;
// определим область буфера, которая будет использоваться
// для восстановления фона 
BufRet:=Bounds(0,0,W,H);
// начальное положение картинки
х := -W; у := 20;
// определим сохраняемую область фона // и сохраним ее
BackRet:=Bounds(x,y,W,H); 
Buf.Canvas.CopyRect(BufRet,Back.Canvas,BackRct);

end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
// восстановлением фона (из буфера) удалим рисунок
Form1.image1.canvas.Draw(x,y,Buf);
x:=x+2;
if x>fоrm1.Image1.Width then x:=-W;
// определим сохраняемую область фона
BackRet:=Bounds(x,у,W,H);
// сохраним ее копию
Buf.Canvas.CopyRect(BufRct,Back.Canvas,BackRct);
// выведем рисунок
Form1.image1.canvas.Draw(x,y,bitmap);

end;

procedure TForm1.Close(Sender: TObject; var Action: TCloseAction);
begin
// освободим память, выделенную  для хранения битовых образов
Back.Free;
bitmap.Free;
Buf.Free;

end;

end.
 